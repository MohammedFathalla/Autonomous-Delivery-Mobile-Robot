<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="base_coordinate">

  <link name="odom">
  </link>

  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0011802 -0.0022568 0.33208"
        rpy="0 0 0" />
      <mass
        value="45.185" />
      <inertia
        ixx="0.64703"
        ixy="-0.00015878"
        ixz="-0.0017912"
        iyy="0.63848"
        iyz="-6.5411E-05"
        izz="0.45954" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

  <joint name="base_joint" type="fixed">
    <origin xyz="0.0 0.0 0.09" rpy="0.0 0.0 0.0"/>
    <parent link="odom"/>
    <child link="base_link"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>

  <link
    name="lidar_link">
    <inertial>
      <origin
        xyz="-0.01205 0.00052865 -0.028765"
        rpy="0 0 0" />
      <mass
        value="0.073082" />
      <inertia
        ixx="1.9579E-05"
        ixy="-1.0452E-07"
        ixz="4.2823E-07"
        iyy="2.4126E-05"
        iyz="-9.3466E-09"
        izz="4.1417E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/lidar_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/lidar_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lidar_joint"
    type="fixed">
    <origin
      xyz="0.041658 0.00082101 0.23873"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="lidar_link" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="right_wheel">
    <inertial>
      <origin
        xyz="-6.7134E-07 0.045293 -3.4949E-06"
        rpy="0 0 0" />
      <mass
        value="1.3494" />
      <inertia
        ixx="0.0067875"
        ixy="2.3192E-08"
        ixz="2.4575E-07"
        iyy="0.01199"
        iyz="1.7342E-09"
        izz="0.0067878" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/right_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/right_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="right_joint"
    type="continuous">
    <origin
      xyz="0 -0.34093 0.039723"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="right_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="6.7134E-07 -0.045294 -3.5979E-06"
        rpy="0 0 0" />
      <mass
        value="1.3494" />
      <inertia
        ixx="0.0067874"
        ixy="2.3192E-08"
        ixz="-2.4575E-07"
        iyy="0.01199"
        iyz="1.7328E-08"
        izz="0.0067878" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/left_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://base_coordinate/meshes/left_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="left_joint"
    type="continuous">
    <origin
      xyz="0 0.34093 0.039723"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="left_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>

      <!-- hokuyo -->
      <gazebo reference="lidar_link">
        <sensor type="ray" name="head_hokuyo_sensor">
          <pose>0 0 0 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>2000</samples>
        <!-- https://github.com/ros-perception/slam_gmapping/issues/79  " Setting more than 2048 samples will cause a problem here is a link with small explanation and solution"-->
                <resolution>1</resolution>
                <min_angle>-1.57</min_angle>
                <max_angle>1.57</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.10</min>
              <max>8.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <!-- Noise parameters based on published spec for Hokuyo laser
                   achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                   stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                   reading. -->
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/filtered_scan</topicName>
            <frameName>lidar_link</frameName>
          </plugin>
        </sensor>
        </gazebo>
      
        <gazebo>
          <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        
            <!-- Plugin update rate in Hz -->
            <updateRate>10</updateRate>
        
            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>left_joint</leftJoint>
        
            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>right_joint</rightJoint>
        
            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>0.58</wheelSeparation>
        
            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>0.25</wheelDiameter>
        
            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1.0</wheelAcceleration>
        
            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>10</wheelTorque>
        
            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>
        
            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>
        
            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>
        
            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_link</robotBaseFrame>
        
            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>
        
          <!-- Set to true to publish transforms for the wheel links, defaults to false -->
          <publishWheelTF>false</publishWheelTF>
        
          <!-- Set to true to publish transforms for the odometry, defaults to true -->
          <publishOdom>false</publishOdom>
        </plugin>
        
        </gazebo>
    
        
        <gazebo reference="base_link">
          <material>Gazebo/Black</material>
          </gazebo>

</robot>